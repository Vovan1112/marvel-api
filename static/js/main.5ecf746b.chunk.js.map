{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelService.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/errorBoundary/ErrorBoundary.js","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResourse","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","RandomChar","state","loading","error","marvelService","onChatLoaded","setState","onError","updateChar","Math","floor","random","then","catch","this","errorMessage","spinner","content","onClick","mjolnir","React","Component","View","CharList","charList","newItemLoadings","charEnded","onRequest","onCharListLoading","onCharListLoaded","newItemLoading","newCharList","ended","length","itemRefs","setRef","ref","push","focusOnItem","forEach","item","classList","remove","add","focus","arr","i","imgStyle","props","onCharSelected","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","ErrorBoundary","errorInfo","console","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ecf746b.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","class MarvelService {\r\n\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'f1810af7f460aeca04e53c5061b58595';\r\n    _baseOffset = 210;\r\n\r\n    getResourse = async (url) =>{\r\n        let res = await fetch(url)\r\n\r\n        if(!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`)\r\n        }\r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResourse(`${this._apiBase}characters?limit=9&offset=${offset}&apikey=${this._apiKey}`);\r\n    return res.data.results.map(this._transformCharacter);\r\n    }\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResourse(`${this._apiBase}characters/${id}?apikey=${this._apiKey}`);\r\n    return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\nreturn {\r\n    id: char.id,\r\n    name: char.name,\r\n    description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n    thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n    homepage: char.urls[0].url,\r\n    wiki: char.urls[1].url,\r\n    comics: char.comics.items\r\n}\r\n    }\r\n}\r\n\r\nexport default MarvelService;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}}src={img} alt={'error'}/>\r\n    )\r\n}\r\n\r\n\r\nexport default ErrorMessage;","import './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport React from 'react'\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nclass RandomChar extends React.Component {\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\ncomponentDidMount(){\n    this.updateChar();\n}\n\nonChatLoaded = (char) =>{\n    this.setState({char, loading: false})\n}\n    \n\nonError = () => {\n    this.setState({loading: false, error: true})\n}\n\n    updateChar = () => {\n        this.setState({loading: true})\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onChatLoaded)\n            .catch(this.onError)\n    }\n\n    render() {\n\n        const {char, loading, error } = this.state;    \n\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n        \n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br />\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\" onClick={this.updateChar}>\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n                </div>\n            </div>\n        )\n    }\n}\n\n\nconst View = ({char}) => {\n\n    const {name, description, thumbnail, homepage, wiki} = char;\nreturn (\n<div className=\"randomchar__block\">\n                    <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" />\n                    <div className=\"randomchar__info\">\n                        <p className=\"randomchar__name\">{name}</p>\n                        <p className=\"randomchar__descr\">\n                            {description}\n                        </p>\n                        <div className=\"randomchar__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n)\n}\n\nexport default RandomChar;","import './charList.scss';\nimport React from 'react'\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass CharList extends React.Component {\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoadings: false,\n        offset: 210,\n        charEnded: false\n    }\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest();\n    }\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n\n        this.setState(({ offset, charList }) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n\n    onError = () => {\n        this.setState({ loading: false, error: true })\n    }\n\n\n\n    itemRefs = [];\n\n    setRef = (ref) => {\n        this.itemRefs.push(ref);\n    }\n\n    focusOnItem = (id) => {\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\n        this.itemRefs[id].classList.add('char__item_selected');\n        this.itemRefs[id].focus();\n    }\n\n    renderItems(arr) {\n        const items = arr.map((item, i) => {\n            let imgStyle = { 'objectFit': 'cover' };\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = { 'objectFit': 'unset' };\n            }\n\n            return (\n                <li\n                    className=\"char__item\"\n                    key={item.id}\n                    ref={this.setRef}\n                    onClick={() => {\n                        this.props.onCharSelected(item.id);\n                        this.focusOnItem(i);\n\n                    }}>\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n\n    render() {\n\n        const { charList, loading, error, newItemLoading, offset, charEnded } = this.state;\n\n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button style={{ 'display': charEnded ? 'none' : 'block' }} disabled={newItemLoading} onClick={() => this.onRequest(offset)} className=\"button button__main button__long\">\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import './charInfo.scss';\nimport React from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton'\nimport PropTypes from 'prop-types'\n\nclass  CharInfo extends React.Component {\n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n\n    componentDidMount(){\n        this.updateChar();\n    }\n\ncomponentDidUpdate(prevProps){\n    if(this.props.charId !== prevProps.charId){\n        this.updateChar();\n    }\n}\n\n\n\nupdateChar = () => {\n    const {charId} = this.props;\n    if(!charId) {\n        return\n    }\n\n\n    this.setState({\n        loading: true\n    })\n\n    this.marvelService\n    .getCharacter(charId)\n    .then(this.onChatLoaded)\n    .catch(this.onError)\n\n}\n\nonChatLoaded = (char) =>{\n    this.setState({char, loading: false})\n}\n    \n\nonError = () => {\n    this.setState({loading: false, error: true})\n}\n\n    render() {\n\n        const {char, loading, error } = this.state;    \n        const skeleton = char || loading || error ? null : <Skeleton />\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\n\nconst View = ({char}) => {\n    \n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n    return (\n<>\n<div className=\"char__basics\">\n                    <img src={thumbnail} alt={name}/>\n                    <div>\n                        <div className=\"char__info-name\">{name}</div>\n                        <div className=\"char__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"char__descr\">\n                    {description}\n                </div>\n                <div className=\"char__comics\">Comics:</div>\n                <ul className=\"char__comics-list\">\n        {comics.length > 0 ? null : 'There is no comics with this character'}\n                    {\n                        comics.map((item, i) =>{\n\n                            if(i > 9) return;\n                            return (\n                                <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                            )\n                        })\n                    }\n                </ul>\n</>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\n\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import React from 'react'\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo){\r\n        console.log(error, errorInfo)\r\n        this.setState({error: true})\r\n    }\r\n\r\n    render() {\r\n        if(this.state.error){\r\n        return (\r\n            <h2>Something went wrong</h2>\r\n        )\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\n\nimport decoration from '../../resources/img/vision.png';\nimport React from \"react\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\n\n\nclass App extends React.Component {\nstate = {\n    selectedChar: null\n}\nonCharSelected = (id) => {\n    this.setState({\n        selectedChar: id\n    })\n}\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                <ErrorBoundary>\n                    <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                    <ErrorBoundary>\n                        <CharList onCharSelected={this.onCharSelected}/>\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                        <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}